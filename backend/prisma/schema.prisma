generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sexo {
  pk_id   Int      @id @default(autoincrement())
  nombre  String   @unique

  personas persona[]
}

model persona {
  pk_id              Int     @id @default(autoincrement())
  fk_id_sexo         Int
  nombre             String
  apellido           String
  fecha_nacimiento   DateTime
  correo_electronico String  @unique
  telefono           String
  direccion          String
  tipo               tipo_persona

  sexo     sexo  @relation(fields: [fk_id_sexo], references: [pk_id])
  docente  docente?
}

enum tipo_persona {
  docente
  director
  administrativo
  estudiante
}

model materia {
  pk_id         Int       @id @default(autoincrement())
  nombre        String    @unique
  clave         String    @unique
  requiere_lab   Boolean
  requiere_pc    Boolean
  observaciones String?

 asignaciones asignacion[]
 docentes docente_materia[]
 cursos curso_materia[]
}

model docente {
  pk_id              Int      @id @default(autoincrement())
  fk_id_persona      Int      @unique
  horas_max_semana   Decimal  @db.Decimal(5, 2)
  fecha_ingreso      DateTime
  activo             Boolean

  persona           persona         @relation(fields: [fk_id_persona], references: [pk_id])
  asignaciones asignacion[]
  materias docente_materia[]
  disponibilidades disponibilidad_docente[]
}

model docente_materia {
  pk_id         Int     @id @default(autoincrement())
  fk_id_docente Int
  fk_id_materia Int
  tiene_especialidad Boolean @default(false)
  experiencia_anios Int @default(0)

  docente docente @relation(fields: [fk_id_docente], references: [pk_id])
  materia materia @relation(fields: [fk_id_materia], references: [pk_id])

  @@unique([fk_id_docente, fk_id_materia])
}

model disponibilidad_docente {
  pk_id         Int     @id @default(autoincrement())
  fk_id_docente Int
  fk_id_bloque  Int

  docente docente @relation(fields: [fk_id_docente], references: [pk_id])
  bloque  bloque  @relation(fields: [fk_id_bloque], references: [pk_id])

  @@unique([fk_id_docente, fk_id_bloque], name: "fk_id_docente_fk_id_bloque")
}

model curso {
  pk_id       Int       @id @default(autoincrement())
  nombre      String    @unique
  descripcion String?

  asignaciones asignacion[]
  materias curso_materia[]
}

model curso_materia {
  pk_id         Int     @id @default(autoincrement())
  fk_id_curso   Int
  fk_id_materia Int

  curso   curso   @relation(fields: [fk_id_curso], references: [pk_id])
  materia materia @relation(fields: [fk_id_materia], references: [pk_id])

  @@unique([fk_id_curso, fk_id_materia])
}

enum tipo_aula {
  conferencias
  taller
  normal
  laboratorio
}

model aula {
  pk_id            Int             @id @default(autoincrement())
  nombre           String          @unique
  capacidad        Int
  tipo             tipo_aula
  posicion         Int
  tiene_pc         Boolean @default(false)
  tiene_proyector  Boolean @default(false)
  tiene_lab        Boolean @default(false)

  asignaciones asignacion[]
}

model anio_escolar {
  pk_id       Int         @id @default(autoincrement())
  nombre      String
  fecha_inicio DateTime
  fecha_fin   DateTime

  horarios horario_generado[]
}

model asignacion {
  pk_id             Int       @id @default(autoincrement())
  fk_id_bloque      Int
  fk_id_horario     Int
  fk_id_aula        Int?
  fk_id_curso       Int?         
  fk_id_docente     Int?
  fk_id_materia     Int?
  justificacion     String?
  esta_activo       Boolean   @default(true)
  puntuacion_total Int?
  puntuacion_detalle String?
  
  bloque      bloque            @relation(fields: [fk_id_bloque], references: [pk_id])
  horarios    horario_generado  @relation(fields: [fk_id_horario], references: [pk_id])
  aula        aula?             @relation(fields: [fk_id_aula], references: [pk_id])
  curso       curso?            @relation(fields: [fk_id_curso], references: [pk_id])
  docente     docente?          @relation(fields: [fk_id_docente], references: [pk_id])
  materia     materia?          @relation(fields: [fk_id_materia], references: [pk_id])
}

enum tipo_bloque {
  clase
  receso
  almuerzo
}

model bloque {
  pk_id         Int     @id @default(autoincrement())
  tipo          tipo_bloque
  hora_inicio   DateTime  @db.Time
  hora_fin      DateTime  @db.Time
  observacion   String?

  asignaciones  asignacion[]
  disponibilidades_docente disponibilidad_docente[]
}

enum dia_semana {
  lunes
  martes
  miercoles
  jueves
  viernes
}

model horario_generado {
  pk_id         Int              @id @default(autoincrement())
  fk_id_anio_escolar Int  
  dia           dia_semana
  esta_activo   Boolean         @default(true)

  asignaciones  asignacion[]
  anio_escolar      anio_escolar @relation(fields: [fk_id_anio_escolar], references: [pk_id])
}
