// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// // Entidades relacionadas a autenticación y usuarios
// model estado_usuario {
//   pk_id   Int      @id @default(autoincrement())
//   nombre  String   @unique

//   usuarios usuario[]
// }

// model usuario {
//   pk_id           Int     @id @default(autoincrement())
//   fk_id_persona   Int     @unique
//   fk_id_estado    Int
//   nombre_usuario  String  @unique
//   contrasena      String

//   persona         persona       @relation(fields: [fk_id_persona], references: [pk_id])
//   estado_usuario  estado_usuario @relation(fields: [fk_id_estado], references: [pk_id])
//   roles           usuario_rol[]
// }

// model rol {
//   pk_id        Int          @id @default(autoincrement())
//   nombre       String       @unique
//   descripcion  String?

//   usuarios     usuario_rol[]
// }

// model usuario_rol {
//   pk_id         Int     @id @default(autoincrement())
//   fk_id_usuario Int
//   fk_id_rol     Int

//   usuario usuario @relation(fields: [fk_id_usuario], references: [pk_id])
//   rol     rol     @relation(fields: [fk_id_rol], references: [pk_id])
//   @@unique([fk_id_usuario, fk_id_rol])
// }

// // Entidades para criterios de asignación que no se usan en el MVP
// model especialidad {
//   pk_id                  Int      @id @default(autoincrement())
//   nombre                 String   @unique
//   descripcion            String?

//   docente_especialidades docente_especialidad[]
//   materia_especialidades materia_especialidad[]
// }

// model docente_especialidad {
//   pk_id            Int     @id @default(autoincrement())
//   fk_id_docente    Int
//   fk_id_especialidad Int
//   experiencia_anios Decimal @db.Decimal(5, 2)

//   docente      docente     @relation(fields: [fk_id_docente], references: [pk_id])
//   especialidad especialidad @relation(fields: [fk_id_especialidad], references: [pk_id])
//   @@unique([fk_id_docente, fk_id_especialidad])
// }

// model materia_especialidad {
//   pk_id              Int  @id @default(autoincrement())
//   fk_id_materia      Int
//   fk_id_especialidad Int

//   materia      materia      @relation(fields: [fk_id_materia], references: [pk_id])
//   especialidad especialidad @relation(fields: [fk_id_especialidad], references: [pk_id])
//   @@unique([fk_id_especialidad, fk_id_materia])
// }

// // Entidad para aulas especializadas
// model laboratorio {
//   pk_id                 Int      @id @default(autoincrement())
//   fk_id_aula            Int      @unique
//   tiene_computadoras    Boolean  @default(false)
//   cantidad_pc           Int      @default(0)
//   tiene_proyector       Boolean  @default(false)
//   software_especializado String?

//   aula aula @relation(fields: [fk_id_aula], references: [pk_id])
// }

// // Entidad para manejo de sustituciones (no usada en el MVP)
// model sustitucion {
//   pk_id                   Int   @id @default(autoincrement())
//   fk_id_horario           Int
//   fk_id_docente_suplente  Int
//   fecha_hora_inicio       DateTime
//   fecha_hora_fin          DateTime
//   motivo                  String

//   horario     horario_asignado @relation(fields: [fk_id_horario], references: [pk_id])
//   suplente    docente          @relation(fields: [fk_id_docente_suplente], references: [pk_id])
// }
